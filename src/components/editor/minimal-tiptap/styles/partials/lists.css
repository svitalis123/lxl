.minimal-tiptap-editor div.tiptap p {
  font-size: var(--mt-font-size-regular);
}

.minimal-tiptap-editor .ProseMirror ol {
  list-style-type: decimal;
}

.minimal-tiptap-editor .ProseMirror ol ol {
  list-style: lower-alpha;
}

.minimal-tiptap-editor .ProseMirror ol ol ol {
  list-style: lower-roman;
}

.minimal-tiptap-editor .ProseMirror ul {
  list-style: disc;
}

.minimal-tiptap-editor .ProseMirror ul ul {
  list-style: circle;
}

.minimal-tiptap-editor .ProseMirror ul ul ul {
  list-style: square;
}

.minimal-tiptap-editor .ProseMirror ul[data-type='taskList'] {
  list-style-type: none;
  padding-left: 0.25rem;
}

.minimal-tiptap-editor .ProseMirror ul[data-type='taskList'] p {
  margin: 0;
}

.minimal-tiptap-editor .ProseMirror ul[data-type='taskList'] li > label {
  margin-right: 0.5rem;
  margin-top: 0.125rem;
  flex: none;
  user-select: none;
}

.minimal-tiptap-editor .ProseMirror li[data-type='taskItem'] {
  display: flex;
  flex-direction: row;
  align-items: flex-start;
}

.minimal-tiptap-editor .ProseMirror li[data-type='taskItem'] .taskItem-checkbox-container {
  position: relative;
  padding-right: 0.5rem;
}

.minimal-tiptap-editor .ProseMirror .taskItem-drag-handle {
  position: absolute;
  left: -1.25rem;
  top: 0.375rem;
  height: 18px;
  width: 18px;
  cursor: move;
  padding-left: 0.125rem;
  color: var(--mt-secondary);
  opacity: 0;
}

.minimal-tiptap-editor
  .ProseMirror
  li[data-type='taskItem']:hover:not(:has(li:hover))
  > .taskItem-checkbox-container
  > .taskItem-drag-handle {
  opacity: 1;
}

.minimal-tiptap-editor .ProseMirror .taskItem-drag-handle:hover {
  color: var(--mt-drag-handle-hover);
}

.minimal-tiptap-editor .ProseMirror .taskItem-checkbox {
  fill-opacity: 0;
  height: 0.875rem;
  width: 0.875rem;
  flex-shrink: 0;
  cursor: pointer;
  user-select: none;
  appearance: none;
  border-radius: 0.25rem;
  border-width: 1px;
  border-style: solid;
  border-color: var(--mt-secondary);
  background-color: transparent;
  background-position: 1px 2px;
  padding: 0.125rem;
  vertical-align: middle;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-duration: 75ms;
  transition-timing-function: cubic-bezier(0.4, 0, 1, 1);
}

.minimal-tiptap-editor .ProseMirror .taskItem-checkbox:checked {
  background-image: url('data:image/svg+xml;utf8,%3Csvg%20width=%2210%22%20height=%229%22%20viewBox=%220%200%2010%208%22%20xmlns=%22http://www.w3.org/2000/svg%22%20fill=%22%23fbfbfb%22%3E%3Cpath%20d=%22M3.46975%205.70757L1.88358%204.1225C1.65832%203.8974%201.29423%203.8974%201.06897%204.1225C0.843675%204.34765%200.843675%204.7116%201.06897%204.93674L3.0648%206.93117C3.29006%207.15628%203.65414%207.15628%203.8794%206.93117L8.93103%201.88306C9.15633%201.65792%209.15633%201.29397%208.93103%201.06883C8.70578%200.843736%208.34172%200.843724%208.11646%201.06879C8.11645%201.0688%208.11643%201.06882%208.11642%201.06883L3.46975%205.70757Z%22%20stroke-width=%220.2%22%20/%3E%3C/svg%3E');
}

.minimal-tiptap-editor .ProseMirror .taskItem-content {
  min-width: 0;
  flex: 1 1 0%;
}

.minimal-tiptap-editor .ProseMirror li[data-checked='true'] .taskItem-content > :not([data-type='taskList']),
.minimal-tiptap-editor .ProseMirror li[data-checked='true'] .taskItem-content .taskItem-checkbox {
  opacity: 0.75;
}